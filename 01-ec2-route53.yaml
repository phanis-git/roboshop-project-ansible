---
- name: "Creating ec2 and updating route53 record"
  hosts: local
  connection: local
  vars:
    ami_id: "ami-09c813fb71547fc4f"
    sg_id: "sg-01f9169658e1539df"
    hosted_zone_id: "Z06921933AGUP8YGI3FIB"
    domain_name: "devops-phani.fun"
    # While creating instances we need to change the below list as for our requirement , so this approach is static
    # Dynamically we can pass through command line like below , we can give multiple server in the below array
    # ansible-playbook -i inventory.ini <file-name> -e "instances=['<servername>','<servername>']"
    # instances:
    # - mongodb
  tasks:
  - name: "amazon.aws.ec2_instance module â€“ Create & manage EC2 instances"
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      instance_type: t2.micro
      security_group: "{{ sg_id }}"
      image_id: "{{ ami_id }}"
      tags:
        name: "{{ item }}"
    loop: "{{ instances }}"
    register: ec2_output

  # - name: "Printing the ec2 details"
  #   ansible.builtin.debug:
  #     msg: "{{ ec2_output }}"
      
  # - name: "Printing private Ip"
  #   ansible.builtin.debug:
  #     msg: "{{ item.instances[0].private_ip_address }}"
  #   loop: "{{ ec2_output.results }}"

  # - name: "Printing public Ip"
  #   ansible.builtin.debug:
  #     msg: "{{ item.instances[0].public_ip_address }}"
  #   loop: "{{ ec2_output.results }}"

  - name: "Create Route53 private Ip's"
    amazon.aws.route53:
      state: present
      zone: "{{ domain_name }}"
      record: "{{ item.item }}.{{ domain_name }}"    #mongodb.devops-phani.fun
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      overwrite: true
    loop: "{{ ec2_output.results }}"

# Creating one record for only frontend with public IP
  - name: "Create Route53 public Ip's if frontend"
    amazon.aws.route53:
      state: present
      zone: "{{ domain_name }}"
      record: "{{ domain_name }}"    #devops-phani.fun
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}"
      overwrite: true
    when: item.item == "frontend"
    loop: "{{ ec2_output.results }}"
  