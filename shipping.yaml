---
- name: "Shipping setup"
  hosts: shipping
  become: yes
  tasks:
    - name: "Installing Maven"
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
    - loop:
      - maven
      - mysql

    - name: install mysql python libraries
      ansible.builtin.pip:
        executable: pip3.9
        name: "{{ item }}"
      loop:
      - cryptography
      - PyMySQL


    - name: "Application user creation"
      ansible.builtin.user:
        name: roboshop
        comment: "roboshop system user"
        home: /app
        shell: /sbin/nologin
        system: true

  # Removing app directory for existing code
    - name: "Removing app directory due to removing existing code"
      ansible.builtin.file:
        path: /app
        state: absent  

    - name: create app directory
      ansible.builtin.file:
        state: directory
        path: /app

    - name: Delete shipping file
      ansible.builtin.file:
        path: /tmp/shipping.zip
        state: absent

    - name: "Downoload the code"
      ansible.builtin.get_url:
        url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip
        dest: /tmp/shipping.zip

    - name: "Unzip the file"
      ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes

    - name: "mvn clean package or download the dependencies & build the application"
      ansible.builtin.command: mvn clean package
      args:
        chdir: /app

    - name: "Moving target jar to shipping.jar"
      ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar 
      args:
        chdir: /app

    - name: "Create or copy shipping service"
      ansible.builtin.copy:
        src: shipping.service
        dest: /etc/systemd/system/shipping.service

    - name: "Import shipping data into mysql"
      community.mysql.mysql_db:
        state: import
        name: all
        login_host: mysql.devops-phani.fun
        login_user: root
        login_password: RoboShop@1
        target: "{{ item }}"
      loop:
      - /app/db/schema.sql
      - /app/db/app-user.sql 
      - /app/db/master-data.sql

    - name: "System Daemon reload"
      ansible.builtin.systemd_service:
        name: shipping
        enabled: true
        state: restarted
        daemon_reload: true