--- 
- name: "Catalogue setup - nodejs application server"
  hosts: catalogue
  become: yes
  tasks:
    - name: "Disable default nodejs version"
      ansible.builtin.command: dnf module disable nodejs -y

    - name: "Enable 20 version"
      ansible.builtin.command: dnf module enable nodejs:20 -y

    - name: "Install nodejs"
      ansible.builtin.package:
        name: nodejs 
        start: present

    - name: "Adding App user or Application user"
      ansible.builtin.user:
        name: roboshop
        comment: "roboshop system user" 
        shell: /sbin/nologin
        system: true
        home: /app

# Safe to remove directory, because 2nd time if we run it will download freshly. no error if does not exist
    - name: "Remove app directory"
      ansible.builtin.file:
        path: /app
        state: absent

    - name: "Creating app directory"
      ansible.builtin.file:
        path: /app
        state: directory

    - name: "Deleting present catalogue code or Catalogue file"
      ansible.builtin.file:
        path: /tmp/catalogue.zip
        state: absent

    - name: "Download the latest code"
      ansible.builtin.get_url:
        url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
        dest: /tmp/catalogue.zip

    - name: "unzip the code "
      ansible.builtin.unarchive:
        src: /tmp/catalogue.zip
        dest: /app
        remote_src: yes

    - name: "Install dependencies"
      community.general.npm:
      path: /app

    - name: "Placing catalogue service to service file" 
      ansible.builtin.copy:
        src: catalogue.service
        dest: /etc/systemd/system/catalogue.service

    - name: "Copy pasting mongo repo"
      ansible.builtin.copy:
        src: mongo.repo
        dest: /etc/yum.repos.d/mongo.repo

    - name: "Install mongodb client package"
      ansible.builtin.package:
        name: mongodb-mongosh
        start: present

    - name: "Connect to mongodb catalogue"
      ansible.builtin.command: mongosh mongodb.devops-phani.fun --quiet --eval "db.getMongo().getDBNames().indexOf('catalogue')"
      register: catalogue_output

    # - name: evaluate cataalogue database
    #   community.mongodb.mongodb_shell:
    #     login_host: mongodb.daws86s.fun
    #     eval: db.getMongo().getDBNames().indexOf('catalogue')
    #   register: catalogue_output

    # - name: print catalogue output
    #   ansible.builtin.debug:
    #     msg: "{{ catalogue_output }}"

    - name: load products into mongodb
      ansible.builtin.shell: mongosh --host mongodb.devops-phani.fun </app/db/master-data.js
      when: catalogue_output.stdout | int < 0

    - name : "Daemon reload"
      ansible.builtin.systemd_service:
        name: catalogue
        state: restarted
        enabled: true
        daemon_reload: true